{
	"info": {
		"_postman_id": "5b822123-a907-40c4-81a5-3db2cb4b3c25",
		"name": "ECOMMERCE TESTS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "USERS",
			"item": [
				{
					"name": "ADMIN",
					"item": [
						{
							"name": "LOGIN - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276136db-76c4-4b4a-ad1a-44526b8d7919",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"token\": \"string\",",
											"        \"refresh\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\"",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\"]",
											"};",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});",
											"",
											"pm.globals.set(\"adminToken\", jsonData.data.token);",
											"",
											"pm.test('Get and save token',function() {",
											"    pm.expect(jsonData.data.token === pm.globals.get(\"adminToken\")).to.be.true;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/admin/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"login"
									]
								},
								"description": "Login for admins."
							},
							"response": [
								{
									"name": "CORRECT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/admin/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "1839"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Tue, 24 Sep 2019 18:16:12 GMT"
										},
										{
											"key": "Server",
											"value": "waitress"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"_id\": \"5d6ef04e6c815fd815a66f79\",\n        \"createdAt\": 1567551566.998351,\n        \"email\": \"mhernandez@intersysconsulting.com\",\n        \"name\": \"Martin Hernandez\",\n        \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiY2IxYjExMDItZjVkMS00NTVhLWI5NDMtZWFmMjUxNWI3NmZjIiwiZXhwIjoxNTcxOTQwOTcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidG9rZW4iOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKcFlYUWlPakUxTmprek5EZzVOeklzSW01aVppSTZNVFUyT1RNME9EazNNaXdpYW5ScElqb2lNVGhtTkRoallUSXRPRGt3TlMwME9EQXlMV0k1WldZdE5UQTNZbUUzWVRabFptVTBJaXdpWlhod0lqb3hOVFk1TkRNMU16Y3lMQ0pwWkdWdWRHbDBlU0k2ZXlKZmFXUWlPaUkxWkRabFpqQTBaVFpqT0RFMVptUTRNVFZoTmpabU56a2lMQ0p1WVcxbElqb2lUV0Z5ZEdsdUlFaGxjbTVoYm1SbGVpSXNJbVZ0WVdsc0lqb2liV2hsY201aGJtUmxla0JwYm5SbGNuTjVjMk52Ym5OMWJIUnBibWN1WTI5dElpd2lZM0psWVhSbFpFRjBJam94TlRZM05UVXhOVFkyTGprNU9ETTFNU3dpZFhCa1lYUmxaRUYwSWpveE5UWTNOVFV4TlRZMkxqazVPRE0xTVgwc0ltWnlaWE5vSWpwbVlXeHpaU3dpZEhsd1pTSTZJbUZqWTJWemN5SjkuZkJ4RTFDcGlqRkd6UnRVR3VlYXF2SENzMHNZa0JEanA2Z2V6OVFmUmJmZyJ9LCJ0eXBlIjoicmVmcmVzaCJ9.HFmTl9hkCANukIwSWDU2gv2-0AH_GPMydPrJ2ydm0tw\",\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiMThmNDhjYTItODkwNS00ODAyLWI5ZWYtNTA3YmE3YTZlZmU0IiwiZXhwIjoxNTY5NDM1MzcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MX0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.fBxE1CpijFGzRtUGueaqvHCs0sYkBDjp6gez9QfRbfg\",\n        \"updatedAt\": 1567551566.998351\n    },\n    \"message\": \"\",\n    \"status\": true\n}"
								}
							]
						},
						{
							"name": "CREATE - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7c90e7a-4227-4b64-90c8-47e854a9dba8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"Admin de prueba\",\n\t\"email\":\"prueba@intersysconsulting.com\",\n\t\"password\":\"123\"\n}"
								},
								"url": {
									"raw": "{{url}}/admin/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"create"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nCreates a new admin user (register)."
							},
							"response": []
						},
						{
							"name": "LOGIN - NEW ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276136db-76c4-4b4a-ad1a-44526b8d7919",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"token\": \"string\",",
											"        \"refresh\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\"",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\"]",
											"};",
											"",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});",
											"",
											"pm.globals.set(\"newAdminId\", jsonData.data._id);",
											"",
											"pm.test('Get and save token',function() {",
											"    pm.expect(jsonData.data._id === pm.globals.get(\"newAdminId\")).to.be.true;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"prueba@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/admin/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"login"
									]
								},
								"description": "Login for admins."
							},
							"response": [
								{
									"name": "CORRECT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/admin/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "1839"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Tue, 24 Sep 2019 18:16:12 GMT"
										},
										{
											"key": "Server",
											"value": "waitress"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"_id\": \"5d6ef04e6c815fd815a66f79\",\n        \"createdAt\": 1567551566.998351,\n        \"email\": \"mhernandez@intersysconsulting.com\",\n        \"name\": \"Martin Hernandez\",\n        \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiY2IxYjExMDItZjVkMS00NTVhLWI5NDMtZWFmMjUxNWI3NmZjIiwiZXhwIjoxNTcxOTQwOTcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidG9rZW4iOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKcFlYUWlPakUxTmprek5EZzVOeklzSW01aVppSTZNVFUyT1RNME9EazNNaXdpYW5ScElqb2lNVGhtTkRoallUSXRPRGt3TlMwME9EQXlMV0k1WldZdE5UQTNZbUUzWVRabFptVTBJaXdpWlhod0lqb3hOVFk1TkRNMU16Y3lMQ0pwWkdWdWRHbDBlU0k2ZXlKZmFXUWlPaUkxWkRabFpqQTBaVFpqT0RFMVptUTRNVFZoTmpabU56a2lMQ0p1WVcxbElqb2lUV0Z5ZEdsdUlFaGxjbTVoYm1SbGVpSXNJbVZ0WVdsc0lqb2liV2hsY201aGJtUmxla0JwYm5SbGNuTjVjMk52Ym5OMWJIUnBibWN1WTI5dElpd2lZM0psWVhSbFpFRjBJam94TlRZM05UVXhOVFkyTGprNU9ETTFNU3dpZFhCa1lYUmxaRUYwSWpveE5UWTNOVFV4TlRZMkxqazVPRE0xTVgwc0ltWnlaWE5vSWpwbVlXeHpaU3dpZEhsd1pTSTZJbUZqWTJWemN5SjkuZkJ4RTFDcGlqRkd6UnRVR3VlYXF2SENzMHNZa0JEanA2Z2V6OVFmUmJmZyJ9LCJ0eXBlIjoicmVmcmVzaCJ9.HFmTl9hkCANukIwSWDU2gv2-0AH_GPMydPrJ2ydm0tw\",\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiMThmNDhjYTItODkwNS00ODAyLWI5ZWYtNTA3YmE3YTZlZmU0IiwiZXhwIjoxNTY5NDM1MzcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MX0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.fBxE1CpijFGzRtUGueaqvHCs0sYkBDjp6gez9QfRbfg\",\n        \"updatedAt\": 1567551566.998351\n    },\n    \"message\": \"\",\n    \"status\": true\n}"
								}
							]
						},
						{
							"name": "CHECK IF ADMIN - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dce73b1e-5691-4edc-8729-a194be1f3ce6",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(jsonData.isAdmin).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url}}/admin/check",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"check"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nCheck if user is admin, returns property \"isAdmin\"."
							},
							"response": []
						},
						{
							"name": "CONFIRM PASSWORD - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276136db-76c4-4b4a-ad1a-44526b8d7919",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"boolean\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"password\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/admin/confirm",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"confirm"
									]
								},
								"description": "Login for admins."
							},
							"response": [
								{
									"name": "CORRECT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/admin/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "1839"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Tue, 24 Sep 2019 18:16:12 GMT"
										},
										{
											"key": "Server",
											"value": "waitress"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"_id\": \"5d6ef04e6c815fd815a66f79\",\n        \"createdAt\": 1567551566.998351,\n        \"email\": \"mhernandez@intersysconsulting.com\",\n        \"name\": \"Martin Hernandez\",\n        \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiY2IxYjExMDItZjVkMS00NTVhLWI5NDMtZWFmMjUxNWI3NmZjIiwiZXhwIjoxNTcxOTQwOTcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidG9rZW4iOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKcFlYUWlPakUxTmprek5EZzVOeklzSW01aVppSTZNVFUyT1RNME9EazNNaXdpYW5ScElqb2lNVGhtTkRoallUSXRPRGt3TlMwME9EQXlMV0k1WldZdE5UQTNZbUUzWVRabFptVTBJaXdpWlhod0lqb3hOVFk1TkRNMU16Y3lMQ0pwWkdWdWRHbDBlU0k2ZXlKZmFXUWlPaUkxWkRabFpqQTBaVFpqT0RFMVptUTRNVFZoTmpabU56a2lMQ0p1WVcxbElqb2lUV0Z5ZEdsdUlFaGxjbTVoYm1SbGVpSXNJbVZ0WVdsc0lqb2liV2hsY201aGJtUmxla0JwYm5SbGNuTjVjMk52Ym5OMWJIUnBibWN1WTI5dElpd2lZM0psWVhSbFpFRjBJam94TlRZM05UVXhOVFkyTGprNU9ETTFNU3dpZFhCa1lYUmxaRUYwSWpveE5UWTNOVFV4TlRZMkxqazVPRE0xTVgwc0ltWnlaWE5vSWpwbVlXeHpaU3dpZEhsd1pTSTZJbUZqWTJWemN5SjkuZkJ4RTFDcGlqRkd6UnRVR3VlYXF2SENzMHNZa0JEanA2Z2V6OVFmUmJmZyJ9LCJ0eXBlIjoicmVmcmVzaCJ9.HFmTl9hkCANukIwSWDU2gv2-0AH_GPMydPrJ2ydm0tw\",\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiMThmNDhjYTItODkwNS00ODAyLWI5ZWYtNTA3YmE3YTZlZmU0IiwiZXhwIjoxNTY5NDM1MzcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MX0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.fBxE1CpijFGzRtUGueaqvHCs0sYkBDjp6gez9QfRbfg\",\n        \"updatedAt\": 1567551566.998351\n    },\n    \"message\": \"\",\n    \"status\": true\n}"
								}
							]
						},
						{
							"name": "GET ALL ADMINS- ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0861b1b1-d51b-43b0-9d84-571d0de3587a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"array\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"createdAt\": \"string\",",
											"        \"email\": \"string\",",
											"        \"name\": \"string\",",
											"        \"password\": \"string\",",
											"        \"updatedAt\": \"string\",",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\"]",
											"};",
											"",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/admin/users",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"users"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nGet all the users and their data."
							},
							"response": []
						},
						{
							"name": "UPDATE DATA - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "06c1e486-687e-4ab9-a141-8f2c18fe4631",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"_id\":\"{{newAdminId}}\",\n\t\"name\":\"Admin de prueba UPDATED\",\n\t\"email\":\"prueba@intersysconsulting.com\"\n}"
								},
								"url": {
									"raw": "{{url}}/admin/update",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"update"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nUpdates \"name\" and \"email\" from a specified Admin (\"_id\")."
							},
							"response": []
						},
						{
							"name": "UPDATE PASSWORD - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1df74e7-1cfd-4f6f-94b5-018654bb24e4",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"_id\":\"{{newAdminId}}\",\n\t\"oldpassword\":\"123\",\n\t\"newpassword1\":\"1234\",\n\t\"newpassword2\":\"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/admin/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"changepassword"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nUpdates \"password\" from a specified Admin (_id)."
							},
							"response": []
						},
						{
							"name": "LOGIN - NEW ADMIN NEW PASSWORD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276136db-76c4-4b4a-ad1a-44526b8d7919",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"token\": \"string\",",
											"        \"refresh\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\"",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\"]",
											"};",
											"",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"prueba@intersysconsulting.com\",\n\t\"password\":\"1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/admin/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"login"
									]
								},
								"description": "Login for admins."
							},
							"response": [
								{
									"name": "CORRECT",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/admin/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"admin",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "1839"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Tue, 24 Sep 2019 18:16:12 GMT"
										},
										{
											"key": "Server",
											"value": "waitress"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"_id\": \"5d6ef04e6c815fd815a66f79\",\n        \"createdAt\": 1567551566.998351,\n        \"email\": \"mhernandez@intersysconsulting.com\",\n        \"name\": \"Martin Hernandez\",\n        \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiY2IxYjExMDItZjVkMS00NTVhLWI5NDMtZWFmMjUxNWI3NmZjIiwiZXhwIjoxNTcxOTQwOTcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidG9rZW4iOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpJVXpJMU5pSjkuZXlKcFlYUWlPakUxTmprek5EZzVOeklzSW01aVppSTZNVFUyT1RNME9EazNNaXdpYW5ScElqb2lNVGhtTkRoallUSXRPRGt3TlMwME9EQXlMV0k1WldZdE5UQTNZbUUzWVRabFptVTBJaXdpWlhod0lqb3hOVFk1TkRNMU16Y3lMQ0pwWkdWdWRHbDBlU0k2ZXlKZmFXUWlPaUkxWkRabFpqQTBaVFpqT0RFMVptUTRNVFZoTmpabU56a2lMQ0p1WVcxbElqb2lUV0Z5ZEdsdUlFaGxjbTVoYm1SbGVpSXNJbVZ0WVdsc0lqb2liV2hsY201aGJtUmxla0JwYm5SbGNuTjVjMk52Ym5OMWJIUnBibWN1WTI5dElpd2lZM0psWVhSbFpFRjBJam94TlRZM05UVXhOVFkyTGprNU9ETTFNU3dpZFhCa1lYUmxaRUYwSWpveE5UWTNOVFV4TlRZMkxqazVPRE0xTVgwc0ltWnlaWE5vSWpwbVlXeHpaU3dpZEhsd1pTSTZJbUZqWTJWemN5SjkuZkJ4RTFDcGlqRkd6UnRVR3VlYXF2SENzMHNZa0JEanA2Z2V6OVFmUmJmZyJ9LCJ0eXBlIjoicmVmcmVzaCJ9.HFmTl9hkCANukIwSWDU2gv2-0AH_GPMydPrJ2ydm0tw\",\n        \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1NjkzNDg5NzIsIm5iZiI6MTU2OTM0ODk3MiwianRpIjoiMThmNDhjYTItODkwNS00ODAyLWI5ZWYtNTA3YmE3YTZlZmU0IiwiZXhwIjoxNTY5NDM1MzcyLCJpZGVudGl0eSI6eyJfaWQiOiI1ZDZlZjA0ZTZjODE1ZmQ4MTVhNjZmNzkiLCJuYW1lIjoiTWFydGluIEhlcm5hbmRleiIsImVtYWlsIjoibWhlcm5hbmRlekBpbnRlcnN5c2NvbnN1bHRpbmcuY29tIiwiY3JlYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MSwidXBkYXRlZEF0IjoxNTY3NTUxNTY2Ljk5ODM1MX0sImZyZXNoIjpmYWxzZSwidHlwZSI6ImFjY2VzcyJ9.fBxE1CpijFGzRtUGueaqvHCs0sYkBDjp6gez9QfRbfg\",\n        \"updatedAt\": 1567551566.998351\n    },\n    \"message\": \"\",\n    \"status\": true\n}"
								}
							]
						},
						{
							"name": "DELETE - ADMIN",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "104eadd6-7963-4a4f-a2a8-1695dd590948",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{adminToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"_id\":\"{{newAdminId}}\"\n}"
								},
								"url": {
									"raw": "{{url}}/admin/delete",
									"host": [
										"{{url}}"
									],
									"path": [
										"admin",
										"delete"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nDeletes a specified Admin (_id)."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "USERS",
					"item": [
						{
							"name": "SIGNUP - USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "97b024ab-89ee-4c67-b0fa-360ee02ca1cc",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"Usuario de prueba\",\n\t\"email\":\"userprueba@intersysconsulting.com\",\n\t\"password\":\"123\",\n\t\"phone\":\"\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/signup",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"signup"
									]
								},
								"description": "Creates a new regular user."
							},
							"response": []
						},
						{
							"name": "LOGIN - USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "335d416c-741d-427a-8b70-c6e6ace247e7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"token\": \"string\",",
											"        \"refresh\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\",",
											"        \"addresses\": \"array\",",
											"        \"phone\":\"string\"",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\",\"addresses\",\"phone\"]",
											"};",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});",
											"",
											"pm.globals.set(\"userToken\", jsonData.data.token);",
											"",
											"pm.test('Get and save token',function() {",
											"    pm.expect(jsonData.data.token === pm.globals.get(\"userToken\")).to.be.true;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"userprueba@intersysconsulting.com\",\n\t\"password\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/user/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"login"
									]
								},
								"description": "Login for regular users."
							},
							"response": []
						},
						{
							"name": "GET MY INFO - USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8513003c-a4d3-4fbb-9330-e8efc44ec0c9",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\",",
											"        \"addresses\": \"array\",",
											"        \"phone\":\"string\"",
											"    },",
											"    \"required\":[\"_id\",\"name\",\"email\",\"addresses\",\"phone\"]",
											"};",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/user",
									"host": [
										"{{url}}"
									],
									"path": [
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE DATA - USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "85fe84f9-9ac2-497d-9185-91652c80b74e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\":\"Usuario de prueba UPDATED\",\n\t\"email\":\"userprueba@intersysconsulting.com\",\n\t\"phone\":\"\",\n\t\"addresses\":[{\n\t\t\"type\":\"Both\",\n\t\t\"alias\":\"Casa\",\n\t\t\"country\":\"Mexico\",\n\t\t\"state\":\"Jalisco\",\n\t\t\"city\":\"Guadalajara\",\n\t\t\"zip\":12345,\n\t\t\"street\":\"Calle 1\",\n\t\t\"number\":\"1234\"\n\t}]\n}"
								},
								"url": {
									"raw": "{{url}}/user/update",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"update"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - REGULAR USERS\n\nUpdates \"name\", \"email\" and \"phone\" from current user. (Token has the reference to this user)"
							},
							"response": [
								{
									"name": "UPDATED_CORRECTLY",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\":\"Martin Hdez\",\n\t\"email\":\"mhernandez@intersysconsulting.com\",\n\t\"phone\":\"3314538897\",\n\t\"addresses\":[{\n\t\t\"type\":\"both\",\n\t\t\"alias\":\"Casa\",\n\t\t\"country\":\"Mexico\",\n\t\t\"state\":\"Jalisco\",\n\t\t\"city\":\"Tlaquepaque\",\n\t\t\"zip\":45595,\n\t\t\"street\":\"Calle 1\",\n\t\t\"number\":\"1013\"\n\t}]\n}"
										},
										"url": {
											"raw": "{{url}}/user/update",
											"host": [
												"{{url}}"
											],
											"path": [
												"user",
												"update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "56"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Thu, 26 Sep 2019 21:27:05 GMT"
										},
										{
											"key": "Server",
											"value": "waitress"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [],\n    \"message\": \"UPDATED_CORRECTLY\",\n    \"status\": true\n}"
								}
							]
						},
						{
							"name": "UPDATE PASSWORD - USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23b8e595-5a79-47a6-a60a-64afa0c8127a",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"array\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{userToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"oldpassword\":\"123\",\n\t\"newpassword1\":\"1234\",\n\t\"newpassword2\":\"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/changepassword",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"changepassword"
									]
								},
								"description": "!BEARER TOKEN REQUIRED - REGULAR USERS\n\nUpdates \"password\" from current user. (Token has the reference to this user)"
							},
							"response": []
						},
						{
							"name": "LOGIN - USER NEW PASSWORD",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "335d416c-741d-427a-8b70-c6e6ace247e7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Response time is less than 1000ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);",
											"});",
											"",
											"var standardScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\":{",
											"        \"data\":{\"type\":\"object\"},",
											"        \"status\":{\"type\":\"boolean\"},",
											"        \"message\":{\"type\":\"string\"}",
											"    },",
											"    \"required\":[\"data\",\"status\",\"message\"]",
											"}",
											"",
											"jsonData = JSON.parse(responseBody)",
											"",
											"pm.test('Returns standard response', function() {",
											"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
											"});",
											"",
											"var responseScheme = {",
											"    \"type\":\"object\",",
											"    \"properties\": {",
											"        \"_id\": \"string\",",
											"        \"token\": \"string\",",
											"        \"refresh\": \"string\",",
											"        \"name\": \"string\",",
											"        \"email\": \"string\",",
											"        \"addresses\": \"array\",",
											"        \"phone\":\"string\"",
											"    },",
											"    \"required\":[\"_id\",\"token\",\"refresh\",\"name\",\"email\",\"addresses\",\"phone\"]",
											"};",
											"",
											"pm.test('Data object is valid', function() {",
											"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
											"});",
											"",
											"pm.globals.set(\"userToken\", jsonData.data.token);",
											"",
											"pm.test('Get and save token',function() {",
											"    pm.expect(jsonData.data.token === pm.globals.get(\"userToken\")).to.be.true;",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"userprueba@intersysconsulting.com\",\n\t\"password\":\"1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/user/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"login"
									]
								},
								"description": "Login for regular users."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "This collection has ADMIN and USERS.\n\nCRUD of all users. Some are restricted by token. (see the lock next to the enpoint name)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1a44951a-e2f8-4113-8a04-1935824f2148",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8359a3db-e995-4ac5-8d80-daf5f747d6e2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PRODUCTS",
			"item": [
				{
					"name": "GET AVAILABLE PRODUCTS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45030121-c9c7-40b0-b919-d381c727d64e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"array\",",
									"    \"properties\": {",
									"        \"_id\": \"string\",",
									"        \"available\": \"boolean\",",
									"        \"image\": \"string\",",
									"        \"name\": \"string\",",
									"        \"price\": \"number\",",
									"        \"shippable\": \"string\",",
									"        \"stock\": \"number\",",
									"    },",
									"    \"required\":[\"_id\",\"available\",\"image\",\"name\",\"price\",\"shippable\",\"stock\"]",
									"};",
									"",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products",
							"host": [
								"{{url}}"
							],
							"path": [
								"products"
							]
						},
						"description": "Get all available products."
					},
					"response": []
				},
				{
					"name": "GET PRODUCTS PAGINATED",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d04f7fd-2ae9-4288-b007-6d58d2d030e0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"object\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\": {",
									"        \"products\": \"array\",",
									"        \"total_products\":\"number\"",
									"    },",
									"    \"required\":[\"products\",\"total_products\"]",
									"};",
									"",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});",
									"",
									"var productsScheme = {",
									"    \"type\":\"array\",",
									"    \"properties\": {",
									"        \"_id\": \"string\",",
									"        \"available\": \"boolean\",",
									"        \"image\": \"string\",",
									"        \"name\": \"string\",",
									"        \"price\": \"number\",",
									"        \"shippable\": \"string\",",
									"        \"stock\": \"number\",",
									"    },",
									"    \"required\":[\"_id\",\"available\",\"image\",\"name\",\"price\",\"shippable\",\"stock\"]",
									"};",
									"",
									"",
									"pm.test('Products array is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data.products, productsScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/3/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"3",
								"2"
							]
						},
						"description": "Get products in page.\n\n\nFirst parameter: total items to get\n\nSecond: Page number"
					},
					"response": []
				},
				{
					"name": "GET ALL PRODUCTS",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e18e12e6-1cbe-497e-89fb-4b9359842a3a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"array\",",
									"    \"properties\": {",
									"        \"_id\": \"string\",",
									"        \"available\": \"boolean\",",
									"        \"image\": \"string\",",
									"        \"name\": \"string\",",
									"        \"price\": \"number\",",
									"        \"shippable\": \"string\",",
									"        \"stock\": \"number\",",
									"        \"description\":\"string\",",
									"        \"sold\":\"number\"",
									"    },",
									"    \"required\":[\"_id\",\"available\",\"image\",\"name\",\"price\",\"shippable\",\"stock\",\"description\",\"sold\"]",
									"};",
									"",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/products/all",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"all"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nGets all products, including the ones that were deleted logically."
					},
					"response": []
				},
				{
					"name": "GET PRODUCTS BY SEARCH",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "003bdea5-d00c-4b5d-ba27-b03d08470898",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"array\",",
									"    \"properties\": {",
									"        \"_id\": \"string\",",
									"        \"available\": \"boolean\",",
									"        \"image\": \"string\",",
									"        \"name\": \"string\",",
									"        \"price\": \"number\",",
									"        \"shippable\": \"string\",",
									"        \"stock\": \"number\",",
									"    },",
									"    \"required\":[\"_id\",\"available\",\"image\",\"name\",\"price\",\"shippable\",\"stock\"]",
									"};",
									"",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url2}}/products/search?search=nintendo",
							"host": [
								"{{url2}}"
							],
							"path": [
								"products",
								"search"
							],
							"query": [
								{
									"key": "search",
									"value": "nintendo"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST PRODUCT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d917af48-79da-46d6-8d73-67589a1a3412",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"string\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"pm.globals.set(\"productId\", jsonData.data);",
									"",
									"pm.test('Get and save productId',function() {",
									"    pm.expect(jsonData.data === pm.globals.get(\"productId\")).to.be.true;",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\":\"Producto prueba\",\n\t\"description\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n\t\"shippable\":true,\n\t\"price\":1,\n\t\"stock\":1,\n\t\"image\":\"https://sdtimes.com/wp-content/uploads/2018/03/opstman.jpg\"\n}"
						},
						"url": {
							"raw": "{{url}}/products/create",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"create"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nCreates a new product."
					},
					"response": []
				},
				{
					"name": "GET SINGLE PRODUCT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bd9a0ea-4b43-4dc4-b29f-0cdccc4d01dd",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"object\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\": {",
									"        \"available\": \"boolean\",",
									"        \"image\": \"string\",",
									"        \"name\": \"string\",",
									"        \"price\": \"number\",",
									"        \"shippable\": \"string\",",
									"        \"stock\": \"number\",",
									"        \"description\":\"string\"",
									"    },",
									"    \"required\":[\"available\",\"image\",\"name\",\"price\",\"shippable\",\"stock\",\"description\"]",
									"};",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\":\"{{productId}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/products/single",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"single"
							]
						},
						"description": "Get all data from single product."
					},
					"response": []
				},
				{
					"name": "UPDATE PRODUCT",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b9af52c-83f4-4eba-8fe9-efb3ff528aca",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\":\"{{productId}}\",\n\t\"available\":true,\n\t\"name\":\"Producto prueba UPDATED\",\n\t\"description\":\"UPDATED\",\n\t\"shippable\":true,\n\t\"price\":10,\n\t\"stock\":10,\n\t\"image\":\"https://sdtimes.com/wp-content/uploads/2018/03/opstman.jpg\"\n}"
						},
						"url": {
							"raw": "{{url}}/products/update",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"update"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nUpdates \"available\", \"name\", \"description\", \"shippable\", \"price\", \"stock\" and \"image\" from a specified product (\"_id\")."
					},
					"response": []
				},
				{
					"name": "UPLOAD IMAGE",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"description": "The image file, could be JPEG, JPG, PNG.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/products/images/upload",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"images",
								"upload"
							]
						},
						"description": "Use this endpoint to upload an image to S3 and get the URL for the regular and the compressed (thumbnail) object for the same file."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CART",
			"item": [
				{
					"name": "POST CART",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b15cfd00-7669-49cc-8b38-df7788226d54",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"_id\": \"{{productId}}\",\n      \"price\": 10,\n      \"quantity\": 1\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{url}}/cart",
							"host": [
								"{{url}}"
							],
							"path": [
								"cart"
							]
						},
						"description": "If cart doesn't exists CREATES cart, if it does then it UPDATES"
					},
					"response": [
						{
							"name": "CART_CREATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"items\":[\r\n\t\t{\r\n\t\t\t\"product_id\":\"5d7676f35db4e862cc84027d\",\r\n\t\t\t\"price\":600000,\r\n\t\t\t\"quantity\":1\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"product_id\":\"5d76778d5db4e862cc84027e\",\r\n\t\t\t\"price\":300000,\r\n\t\t\t\"quantity\":3\r\n\t\t}\r\n\t]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "51"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Wed, 25 Sep 2019 14:26:37 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"CART_CREATED\",\n    \"status\": true\n}"
						},
						{
							"name": "PRICE_MISMATCH",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"items\":[\n\t\t{\n\t\t\t\"product_id\":\"5d7676f35db4e862cc84027d\",\n\t\t\t\"price\":9,\n\t\t\t\"quantity\":1\n\t\t},\n\t\t{\n\t\t\t\"product_id\":\"5d76778d5db4e862cc84027e\",\n\t\t\t\"price\":300000,\n\t\t\t\"quantity\":5\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "54"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Tue, 24 Sep 2019 18:27:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"PRICE_MISMATCH\",\n    \"status\": false\n}"
						},
						{
							"name": "PRODUCT_NOT_FOUND",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"items\":[\n\t\t{\n\t\t\t\"product_id\":\"5d7676f35db4e862cc84026d\",\n\t\t\t\"price\":600000,\n\t\t\t\"quantity\":1\n\t\t},\n\t\t{\n\t\t\t\"product_id\":\"5d76778d5db4e862cc84027e\",\n\t\t\t\"price\":300000,\n\t\t\t\"quantity\":5\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "57"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Tue, 24 Sep 2019 18:28:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"PRODUCT_NOT_FOUND\",\n    \"status\": false\n}"
						},
						{
							"name": "NO_ENOUGH_STOCK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"items\":[\n\t\t{\n\t\t\t\"product_id\":\"5d7676f35db4e862cc84027d\",\n\t\t\t\"price\":600000,\n\t\t\t\"quantity\":1\n\t\t},\n\t\t{\n\t\t\t\"product_id\":\"5d76778d5db4e862cc84027e\",\n\t\t\t\"price\":300000,\n\t\t\t\"quantity\":100\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "55"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Tue, 24 Sep 2019 18:20:14 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"NO_ENOUGH_STOCK\",\n    \"status\": false\n}"
						},
						{
							"name": "BAD_REQUEST",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "490"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Tue, 24 Sep 2019 18:29:02 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"BAD_REQUEST: 'items' is a required property\\n\\nFailed validating 'required' in schema:\\n    {'properties': {'items': {'price': {'type': 'number'},\\n                              'product_id': {'type': 'string'},\\n                              'quantity': {'type': 'number'},\\n                              'type': 'array'},\\n                    'user': {'type': 'string'}},\\n     'required': ['items'],\\n     'type': 'object'}\\n\\nOn instance:\\n    {}\",\n    \"status\": false\n}"
						},
						{
							"name": "CART_UPDATED",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"items\":[\n\t\t{\n\t\t\t\"product_id\":\"5d7676f35db4e862cc84027d\",\n\t\t\t\"price\":600000,\n\t\t\t\"quantity\":1\n\t\t},\n\t\t{\n\t\t\t\"product_id\":\"5d76778d5db4e862cc84027e\",\n\t\t\t\"price\":300000,\n\t\t\t\"quantity\":5\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "51"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Tue, 24 Sep 2019 18:16:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"CART_UPDATED\",\n    \"status\": true\n}"
						}
					]
				},
				{
					"name": "GET CART",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62edf509-6541-4df8-8e88-0bec29579467",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});",
									"",
									"var responseScheme = {",
									"    \"type\":\"array\",",
									"    \"properties\": {",
									"        \"_id\": \"string\",",
									"        \"price\": \"number\",",
									"        \"quantity\": \"number\",",
									"    },",
									"    \"required\":[\"_id\",\"price\",\"quantity\"]",
									"};",
									"",
									"",
									"pm.test('Data object is valid', function() {",
									"  pm.expect(tv4.validate(jsonData.data, responseScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/cart",
							"host": [
								"{{url}}"
							],
							"path": [
								"cart"
							]
						},
						"description": "Gets cart"
					},
					"response": [
						{
							"name": "GET CART",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "282"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Wed, 25 Sep 2019 14:27:47 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"_id\": \"5d8a3f0def9e8d24a93016d7\",\n        \"createdAt\": 1569341197.783967,\n        \"items\": [\n            {\n                \"price\": 600000,\n                \"product_id\": \"5d7676f35db4e862cc84027d\",\n                \"quantity\": 1\n            },\n            {\n                \"price\": 300000,\n                \"product_id\": \"5d76778d5db4e862cc84027e\",\n                \"quantity\": 5\n            }\n        ],\n        \"updatedAt\": 1569349527.215453\n    },\n    \"message\": \"\",\n    \"status\": false\n}"
						},
						{
							"name": "EMPTY_CART",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:5000/cart",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "5000",
									"path": [
										"cart"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.15.5 Python/3.7.4"
								},
								{
									"key": "Date",
									"value": "Wed, 25 Sep 2019 14:30:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [],\n    \"message\": \"EMPTY_CART\",\n    \"status\": false\n}"
						}
					]
				},
				{
					"name": "GET PRODUCTS SUMMARY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d80ec577-1599-4913-92ab-52121006f779",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"object\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_ids\":[\n\t\t\"{{productId}}\"\n\t]\n}"
						},
						"url": {
							"raw": "{{url}}/cart/summary",
							"host": [
								"{{url}}"
							],
							"path": [
								"cart",
								"summary"
							]
						},
						"description": "To use with cart, to fetch aditional data of each product in cart."
					},
					"response": [
						{
							"name": "Mixed valid and invalid _ids",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"_ids\":[\n\t\t\"NOT_AN_ID\",\n\t\t\"5d7918e122b845fd1e662d27\",\n\t\t\"5d7676f35db4e862cc84027d\"\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/cart/summary",
									"host": [
										"{{url}}"
									],
									"path": [
										"cart",
										"summary"
									]
								}
							},
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"5d7676f35db4e862cc84027d\": {\r\n      \"image\": \"https://i.kinja-img.com/gawker-media/image/upload/s--m6F4tJ-n--/c_scale,f_auto,fl_progressive,q_80,w_800/imfz8sq2jjpl19apqhvb.jpg\",\r\n      \"name\": \"Nintendo Switch\",\r\n      \"price\": 600000,\r\n      \"stock\": 1\r\n    },\r\n    \"5d7918e122b845fd1e662d27\": {\r\n      \"image\": \"https://doto.com.mx/media/catalog/product/cache/926507dc7f93631a094422215b778fe0/x/i/xiaomi-mia3-gris1-dotomexico.jpg\",\r\n      \"name\": \" Xiaomi Mi A3 128Gb 4Gb Ram -Gris\",\r\n      \"price\": 500000,\r\n      \"stock\": 1\r\n    },\r\n    \"NOT_AN_ID\": \"ERROR: This product does not exist\"\r\n  },\r\n  \"message\": \"FETCHED\",\r\n  \"status\": true\r\n}"
						},
						{
							"name": "Invalid JSON body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"not\": \"a correct format\",\n\t\"gives\": \"an error\"\n}"
								},
								"url": {
									"raw": "{{url}}/cart/summary",
									"host": [
										"{{url}}"
									],
									"path": [
										"cart",
										"summary"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "232"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Date",
									"value": "Fri, 27 Sep 2019 15:40:31 GMT"
								},
								{
									"key": "Server",
									"value": "waitress"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": [],\r\n  \"message\": \"BAD_REQUEST: '_ids' is a required property\\n\\nFailed validating 'required' in schema:\\n    {'properties': {'_ids': {'items': {'type': 'string'}, 'type': 'array'}},\\n     'required': ['_ids'],\\n     'type': 'object'}\\n\\nOn instance:\\n    {'gives': 'an error', 'not': 'a correct format'}\",\r\n  \"status\": false\r\n}"
						},
						{
							"name": "Valid _ids",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"_ids\":[\n\t\t\"5d7be66ce49153c53487fb05\",\n\t\t\"5d79191222b845fd1e662d28\"\n\t]\n}"
								},
								"url": {
									"raw": "{{url}}/cart/summary",
									"host": [
										"{{url}}"
									],
									"path": [
										"cart",
										"summary"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Length",
									"value": "232"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Date",
									"value": "Fri, 27 Sep 2019 15:40:31 GMT"
								},
								{
									"key": "Server",
									"value": "waitress"
								}
							],
							"cookie": [],
							"body": "{\r\n  \"data\": {\r\n    \"5d79191222b845fd1e662d28\": {\r\n      \"image\": \"https://images-na.ssl-images-amazon.com/images/I/71yqkmEkGzL._SL1500_.jpg\",\r\n      \"name\": \" Bose SoundLink Micro - Altavoz Bluetooth Resistente al Agua, Negro (Black) \",\r\n      \"price\": 250000,\r\n      \"stock\": 1\r\n    },\r\n    \"5d7be66ce49153c53487fb05\": {\r\n      \"image\": \"https://images-na.ssl-images-amazon.com/images/I/51Z1jkudQGL._SL1000_.jpg\",\r\n      \"name\": \"Xiaomi Audífonos Bluetooth Redmi Airdots \",\r\n      \"price\": 58900,\r\n      \"stock\": 1\r\n    }\r\n  },\r\n  \"message\": \"FETCHED\",\r\n  \"status\": true\r\n}"
						}
					]
				},
				{
					"name": "DELETE MY CART",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/cart/delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"cart",
								"delete"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE TESTS CREATED",
			"item": [
				{
					"name": "DELETE MY USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "104eadd6-7963-4a4f-a2a8-1695dd590948",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/user/delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"delete"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nDeletes a specified Admin (_id)."
					},
					"response": []
				},
				{
					"name": "DELETE PRODUCT - LOGICALLY",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef95b7ba-f7ab-4902-9586-ae0339316686",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\":\"{{productId}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/products/delete",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"delete"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nDelete a product specified (\"_id\"), by changing its property \"available\" to False."
					},
					"response": []
				},
				{
					"name": "DELETE PRODUCT - FROM DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e74d6778-437e-4f26-89da-8085ce9e5926",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"var standardScheme = {",
									"    \"type\":\"object\",",
									"    \"properties\":{",
									"        \"data\":{\"type\":\"array\"},",
									"        \"status\":{\"type\":\"boolean\"},",
									"        \"message\":{\"type\":\"string\"}",
									"    },",
									"    \"required\":[\"data\",\"status\",\"message\"]",
									"}",
									"",
									"jsonData = JSON.parse(responseBody)",
									"",
									"pm.test('Returns standard response', function() {",
									"  pm.expect(tv4.validate(jsonData, standardScheme)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{adminToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"_id\":\"{{productId}}\"\n}"
						},
						"url": {
							"raw": "{{url}}/products/delete/real",
							"host": [
								"{{url}}"
							],
							"path": [
								"products",
								"delete",
								"real"
							]
						},
						"description": "!BEARER TOKEN REQUIRED - ADMIN\n\nDelete a product specified (\"_id\")."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3decce22-ba4b-4211-891a-25f7a03e2fba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ed211ad8-edda-4d04-97cd-c6fa5c75c3b2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b9bbea2e-fe14-4dc2-81cf-c6fe5dba5b38",
			"key": "url",
			"value": "localhost:8080",
			"type": "string"
		},
		{
			"id": "f79d2691-ca9b-4cfc-885b-6b9711930f91",
			"key": "url2",
			"value": "localhost:5000",
			"type": "string"
		},
		{
			"id": "c9fe5bd6-c40f-4c7b-8ebb-c79409a5cdd1",
			"key": "url3",
			"value": "http://ecommerce-test.us-east-2.elasticbeanstalk.com",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}